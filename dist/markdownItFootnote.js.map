{"version":3,"file":"markdownItFootnote.modern.js","sources":["../index.ts"],"sourcesContent":["// Process footnotes\n//\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Renderer partials\n\nfunction anchorFnDefault(n, excludeSubId, tokens, idx, options, env, slf) {\n  let prefix = '';\n  if (typeof env.docId === 'string' && env.docId.length > 0) {\n    prefix = '-' + env.docId + '-';\n  }\n  return prefix + n;\n}\n\nfunction captionFnDefault(n, tokens, idx, options, env, slf) {\n  //return '[' + n + ']';\n  return '' + n;\n}\n\nfunction headerFnDefault(state) {\n  return '';\n}\n\n\n/*\nref:\n  return `<label aria-describedby=\"fn${id}\" role=\"presentation\" class=\"sidelink\" for=\"fn${id}-content\">\n<a aria-hidden=\"true\" href=\"#fn${id}\"><output class=\"highlight fnref\" id=\"fnref${refid}\">${caption}\n</output></a></label>`;\n\n\nopen:\n  return `<aside id=\"fn${id}\" class=\"sidenote\" role=\"note\">\n    <output aria-hidden=\"true\" class=\"highlight\" id=\"fn${id}-content\">\n    <label role=\"presentation\" for=\"fnref${id}\">`;\n}\n\nfunction render_sidenote_close() {\n  return '</label></output></aside>\\n';\n}\n\n*/\n\nconst default_plugin_options = {\n  // atDocumentEnd: false,               -- obsoleted option of the original plugin\n\n  anchorFn: anchorFnDefault,\n  captionFn: captionFnDefault,\n  headerFn: headerFnDefault,\n\n  // see also https://www.editage.com/insights/footnotes-in-tables-part-1-choice-of-footnote-markers-and-their-sequence\n  // why asterisk/star is not part of the default footnote marker sequence.\n  //\n  // For similar reasons, we DO NOT include the section § symbol in this list.\n  //\n  // when numberSequnce is NULL/empty, a regular numerical numbering is assumed.\n  // Otherwise, the array is indexed; when there are more footnotes than entries in\n  // the numberSequence array, the entries are re-used, but doubled/trippled, etc.\n  //\n  // When the indexing in this array hits a NUMERIC value (as last entry), any higher\n  // footnotes are NUMBERED starting at that number.\n  //\n  // NOTE: as we can reference the same footnote from multiple spots, we do not depend\n  // on CSS counter() approaches by default, but providee this mechanism in the plugin\n  // code itself.\n  numberSequence: [ '†', '‡', '††', '‡‡', '¶', 1 ],\n\n  // Overrides the footnode mode when set to one of the following:\n  //\n  // Recognized 'modes':\n  // '>': aside note (default for inline notes)\n  // ':': end node\n  // '=': section note (default for regular referenced notes)\n  //\n  modeOverride: null,\n}\n\nexport default function footnote_plugin(md, plugin_options) {\n  let parseLinkLabel = md.helpers.parseLinkLabel,\n      isSpace = md.utils.isSpace;\n\n  plugin_options = Object.assign({}, plugin_options, default_plugin_options);\n\n  function determine_mode(mode: string, default_mode: string) {\n    if (plugin_options.modeOverride && '>:='.includes(plugin_options.modeOverride)) {\n      return {\n        mode: plugin_options.modeOverride,\n        fromInput: false\n      };\n    }\n    if ('>:='.includes(mode)) {\n      return {\n        mode,\n        fromInput: true\n      };\n    }\n    return {\n      mode: default_mode,\n      fromInput: false\n    };\n  }\n\n  function determine_footnote_symbol(idx) {\n    if (plugin_options.numberSequence == null || plugin_options.numberSequence.length === 0) { return idx + 1; }\n    const len = plugin_options.numberSequence.length;\n    if (idx >= len) {\n      // is last slot numeric or alphabetical?\n      let slot = plugin_options.numberSequence[len - 1];\n      if (Number.isFinite(slot)) {\n        let delta = idx - len + 1;\n        return slot + delta;\n      }\n\n        // non-numerical last slot --> duplicate, triplicate, etc.\n      let dupli = (idx / len) | 0;  // = int(x mod N)\n      let remainder = idx % len;\n      let core = plugin_options.numberSequence[remainder];\n      let str = core;\n      for (let i = 1; i < dupli; i++) {\n        str += core;\n      }\n      return str;\n\n    }\n\n    return plugin_options.numberSequence[idx];\n  }\n\n  function render_footnote_n(tokens, idx, excludeSubId) {\n    let mark = tokens[idx].meta.id + 1;\n    let n = '' + mark; // = mark.toString();\n\n    if (!excludeSubId && tokens[idx].meta.subId > 0) {\n      n += '-' + tokens[idx].meta.subId;\n    }\n\n    return n;\n  }\n\n  function render_footnote_mark(tokens, idx, env) {\n    let token = tokens[idx];\n    let info = env.footnotes.list[token.meta.id] || {};\n    let labelOverride = info.labelOverride;\n    let mark = labelOverride || determine_footnote_symbol(token.meta.id);\n    let n = '' + mark; // = mark.toString();\n    return n;\n  }\n\n  function render_footnote_anchor_name(tokens, idx, options, env, slf) {\n    let n = render_footnote_n(tokens, idx, true);\n    return plugin_options.anchorFn(n, true, tokens, idx, options, env, slf);\n  }\n\n  function render_footnote_anchor_nameRef(tokens, idx, options, env, slf) {\n    let n = render_footnote_n(tokens, idx, false);\n    return plugin_options.anchorFn(n, false, tokens, idx, options, env, slf);\n  }\n\n  function render_footnote_caption(tokens, idx, options, env, slf) {\n    let n = render_footnote_mark(tokens, idx, env);\n    return plugin_options.captionFn(n, tokens, idx, options, env, slf);\n  }\n\n  function render_footnote_ref(tokens, idx, options, env, slf) {\n    let id      = render_footnote_anchor_name(tokens, idx, options, env, slf);\n    let caption = render_footnote_caption(tokens, idx, options, env, slf);\n    let refid   = render_footnote_anchor_nameRef(tokens, idx, options, env, slf);\n\n    // check if multiple footnote references are bunched together:\n    // IFF they are, we should separate them with commas.\n    //\n    // Exception: when next token has an extra text (`meta.text`) the\n    // bunching together is not a problem as them the output will render\n    // like this: `bla<sup>1</sup><a>text<sup>2</sup></a>`, ergo a look\n    // like this: `bla¹text²` instead of bunched footnotes references ¹ and ²\n    // that would (without the extra comma injection) look like `bla¹²` instead\n    // of `x¹⁺²` (here '+' instead of ',' comma, but you get the idea -- there's no\n    // Unicode superscript-comma so that's why I used unicode superscript-plus\n    // in this 'ascii art' example).\n    //\n    const next_token = tokens[idx + 1] || {};\n    const next_token_meta = next_token.meta || {};\n    const bunched_footnote_refs = next_token.type === 'footnote_ref' && !next_token_meta.text;\n\n    if (tokens[idx].meta.text) {\n      return '<a href=\"#fn' + id + '\" id=\"fnref' + refid + '\">' +\n            tokens[idx].meta.text +\n            '<sup class=\"footnote-ref\">' + caption + '</sup></a>' +\n            (bunched_footnote_refs ? '<sup class=\"footnote-ref\">,</sup>' : '');\n    }\n\n    return `<sup class=\"footnote-ref\"><a href=\"#fn${ id }\" id=\"fnref${ refid }\">${ caption }</a>${ bunched_footnote_refs ? ',' : '' }</sup>`;\n  }\n\n  function render_footnote_block_open(tokens, idx, options) {\n    let header = tokens[idx].markup;\n    return (options.xhtmlOut ? '<hr class=\"footnotes-sep\" />\\n' : '<hr class=\"footnotes-sep\">\\n') +\n         '<section class=\"footnotes\">\\n' +\n           (header ? '<h3 class=\"footnotes-header\">' + header + '</h3>' : '') +\n         '<ul class=\"footnotes-list\">\\n';\n  }\n\n  function render_footnote_block_close() {\n    return '</ul>\\n</section>\\n';\n  }\n\n  function render_footnote_reference_open(tokens, idx, options) {\n    return '<!-- footnote reference start -->\\n';\n  }\n\n  function render_footnote_reference_close() {\n    return '<!-- footnote reference end -->\\n';\n  }\n\n  function render_footnote_mark_end_of_block() {\n    return '<!-- footnote dump marker -->\\n';\n  }\n\n  function render_footnote_open(tokens, idx, options, env, slf) {\n    let id = render_footnote_anchor_name(tokens, idx, options, env, slf);\n    let caption = render_footnote_caption(tokens, idx, options, env, slf);\n\n    // allow both a JavaWScript --> CSS approach via `data-footnote-caption`\n    // and a classic CSS approach while a display:inline-block SUP presenting\n    // the LI 'button' instead:\n    return `<li tabindex=\"-1\" id=\"fn${ id }\" class=\"footnote-item\" data-footnote-caption=\"${ caption }\"><span class=\"footnote-caption\"><sup class=\"footnote-caption\">${ caption }</sup></span><span class=\"footnote-content\">`;\n  }\n\n  function render_footnote_close() {\n    return '</span></li>\\n';\n  }\n\n  function render_footnote_anchor(tokens, idx, options, env, slf) {\n    let refid = render_footnote_n(tokens, idx, false);\n    refid = plugin_options.anchorFn(refid, false, tokens, idx, options, env, slf);\n\n    /* ↩ with escape code to prevent display as Apple Emoji on iOS */\n    return ' <a href=\"#fnref' + refid + '\" class=\"footnote-backref\">\\u21a9\\uFE0E</a>';\n  }\n\n\n  md.renderer.rules.footnote_ref          = render_footnote_ref;\n  md.renderer.rules.footnote_block_open   = render_footnote_block_open;\n  md.renderer.rules.footnote_block_close  = render_footnote_block_close;\n  md.renderer.rules.footnote_reference_open   = render_footnote_reference_open;\n  md.renderer.rules.footnote_reference_close  = render_footnote_reference_close;\n  md.renderer.rules.footnote_mark_end_of_block = render_footnote_mark_end_of_block;\n  md.renderer.rules.footnote_open         = render_footnote_open;\n  md.renderer.rules.footnote_close        = render_footnote_close;\n  md.renderer.rules.footnote_anchor       = render_footnote_anchor;\n\n  function find_end_of_block_marker(state, startIndex) {\n    let idx, len;\n    let tokens = state.tokens;\n    for (idx = startIndex, len = tokens.length; idx < len; idx++) {\n      if (tokens[idx].type === 'footnote_mark_end_of_block') { return idx; }\n    }\n    //console.error({ tok: tokens.slice(startIndex), startIndex, idx, len });\n    //throw Error('Should never get here!');\n\n    // Punch a slot into the token stream (at the very end)\n    // for consistency with footnote_mark_end_of_block():\n    //footnote_mark_end_of_block(state, startLine, endLine, silent);\n    let token = new state.Token('footnote_mark_end_of_block', '', 0);\n    token.hidden = true;\n    //token.meta = {\n    //  EndOfFile: true\n    //};\n    tokens.push(token);\n    return tokens.length - 1;\n  }\n\n  function update_end_of_block_marker(state, footnoteId) {\n    // inject marker into parent = block level token stream to announce the advent of an (inline) footnote:\n    // because the markdown_it code uses a for() loop to go through the parent nodes while parsing the\n    // 'inline' chunks, we CANNOT safely inject a marker BEFORE the chunk, only AFTERWARDS:\n    let parentState = state.env.parentState;\n    let parentIndex = state.env.parentTokenIndex;\n    let markerTokenIndex = find_end_of_block_marker(parentState, parentIndex + 1);\n    let token = parentState.tokens[markerTokenIndex];\n    if (!token.meta) token.meta = {};\n    if (!token.meta.footnote_list) token.meta.footnote_list = [];\n    token.meta.footnote_list.push(footnoteId);\n  }\n\n  // Mark end of paragraph/heading/whatever BLOCK (or rather: START of the next block!)\n  function footnote_mark_end_of_block(state, startLine, endLine, silent) {\n    if (!silent && state.tokens.length > 0) {\n      let token = state.push('footnote_mark_end_of_block', '', 0);\n      token.hidden = true;\n    }\n    return false;\n  }\n\n  // Process footnote block definition\n  function footnote_def(state, startLine, endLine, silent) {\n    let oldBMark, oldTShift, oldSCount, oldParentType, pos, label, token,\n        initial, offset, ch, posAfterColon,\n        start = state.bMarks[startLine] + state.tShift[startLine],\n        max = state.eMarks[startLine];\n\n    // line should be at least 6 chars - \"[^x]: \" or \"[^x]:> \"\n    if (start + 5 > max) { return false; }\n\n    if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }\n    if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }\n\n    for (pos = start + 2; pos < max; pos++) {\n      if (state.src.charCodeAt(pos) === 0x0A /* LF */) { return false; }\n      if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n        break;\n      }\n    }\n    let labelEnd = pos;\n\n    if (pos === start + 2) { return false; } // no empty footnote labels\n    if (pos + 1 >= max || state.src.charCodeAt(++pos) !== 0x3A /* : */) { return false; }\n\n    let mode_rec = determine_mode(state.src[pos + 1], '=');   // default mode is section_note mode.\n    if (mode_rec.fromInput) \n      pos++;\n    let mode = mode_rec.mode;\n\n    if (pos + 1 >= max || state.src.charCodeAt(++pos) !== 0x20 /* space */) { return false; }\n    if (silent) { return true; }\n    pos++;\n\n    if (!state.env.footnotes) { state.env.footnotes = {}; }\n    if (!state.env.footnotes.refs) { state.env.footnotes.refs = {}; }\n    label = state.src.slice(start + 2, labelEnd);\n    let text;\n    if (label.match(/^(\\S+)\\s+(.+)$/)) {\n      label = RegExp.$1;\n      text = RegExp.$2;\n    }\n\n    console.error('extracted label = ', { label, text, labelEnd, pos, start });\n    state.env.footnotes.refs[':' + label] = -1;\n\n    token = state.push('footnote_reference_open', '', 1);\n    token.meta = {\n      id: -1,\n      label,\n      labelOverride: text,\n      mode\n    };\n    token.hidden = true;\n\n    oldBMark = state.bMarks[startLine];\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n    oldParentType = state.parentType;\n\n    posAfterColon = pos;\n    initial = offset = state.sCount[startLine] + pos - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    state.tShift[startLine] = pos - posAfterColon;\n    state.sCount[startLine] = offset - initial;\n\n    state.bMarks[startLine] = posAfterColon;\n    state.blkIndent += 4;\n    state.parentType = 'footnote';\n\n    if (state.sCount[startLine] < state.blkIndent) {\n      state.sCount[startLine] += state.blkIndent;\n    }\n\n    state.md.block.tokenize(state, startLine, endLine, true);\n\n    state.parentType = oldParentType;\n    state.blkIndent -= 4;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.bMarks[startLine] = oldBMark;\n\n    token = state.push('footnote_reference_close', '', -1);\n\n    return true;\n  }\n\n  // Process inline footnotes (^[...] or ^[>...])\n  function footnote_inline(state, silent) {\n    let labelStart,\n        labelEnd,\n        footnoteId,\n        token,\n        tokens,\n        max = state.posMax,\n        start = state.pos;\n\n    if (start + 2 >= max) { return false; }\n    if (state.src.charCodeAt(start) !== 0x5E/* ^ */) { return false; }\n    if (state.src.charCodeAt(start + 1) !== 0x5B/* [ */) { return false; }\n\n    labelStart = start + 2;\n\n    // NOTE: inline notes are automatically considered to be ASIDE notes,\n    // UNLESS otherwise specified!\n    //\n    // Recognized 'modes':\n    // '>': aside note (default for inline notes)\n    // ':': end node\n    // '=': section note (default for regular referenced notes)\n    //\n    // (Also note https://v4.chriskrycho.com/2015/academic-markdown-and-citations.html:\n    // our notes look like this: `[^ref]:` while Academic MarkDown references look\n    // like this: `[@Belawog2012]` i.e. no '^' in there. Hence these can safely co-exist.)\n    //\n    let mode_rec = determine_mode(state.src[start + 2], '>');   // default mode is aside ~ sidenote mode.\n    if (mode_rec.fromInput) \n      labelStart++;\n    let mode = mode_rec.mode;\n\n    labelEnd = parseLinkLabel(state, start + 1);\n\n    // parser failed to find ']', so it's not a valid note\n    if (labelEnd < 0) { return false; }\n\n    // We found the end of the link, and know for a fact it's a valid link;\n    // so all that's left to do is to call tokenizer.\n    //\n    if (!silent) {\n      // inline blocks have their own *child* environment in markdown-it v10+.\n      // As the footnotes must live beyond the lifetime of the inline block env,\n      // we must patch them into the `parentState.env` for the footnote_tail\n      // handler to be able to access them afterwards!\n      let parentState = state.env.parentState;\n      let parentEnv = parentState.env;\n      if (!parentEnv.footnotes) { parentEnv.footnotes = {}; }\n      if (!parentEnv.footnotes.list) { parentEnv.footnotes.list = []; }\n      footnoteId = parentEnv.footnotes.list.length;\n\n      // WARNING: claim our footnote slot for there MAY be nested footnotes\n      // discovered in the next inline.parse() call below!\n      parentEnv.footnotes.list[footnoteId] = null;\n\n      token = state.push('footnote_ref', '', 0);\n      //token.meta = { id: footnoteId, subId: 0, label: null };\n      token.meta = {\n        id: footnoteId,\n        mode\n      };\n\n      state.md.inline.parse(\n        state.src.slice(labelStart, labelEnd),\n        state.md,\n        state.env,\n        tokens = []\n      );\n\n      // Now fill our previously claimed slot:\n      parentEnv.footnotes.list[footnoteId] = {\n        content: state.src.slice(labelStart, labelEnd),\n        tokens,\n        mode\n      };\n\n      // inject marker into parent = block level token stream to announce the advent of an (inline) footnote:\n      // because the markdown_it code uses a for() loop to go through the parent nodes while parsing the\n      // 'inline' chunks, we CANNOT safely inject a marker BEFORE the chunk, only AFTERWARDS:\n      update_end_of_block_marker(state, footnoteId);\n\n      //md.block.ruler.enable('footnote_mark_end_of_block');\n    }\n\n    state.pos = labelEnd + 1;\n    state.posMax = max;\n    return true;\n  }\n\n  // Process footnote references with text ([^label ...])\n  function footnote_ref_with_text(state, silent) {\n    let label,\n        pos,\n        footnoteId,\n        footnoteSubId,\n        token,\n        max = state.posMax,\n        start = state.pos;\n\n    // should be at least 6 chars - \"[^l x]\"\n    if (start + 5 > max) { return false; }\n\n    if (!state.env.footnotes || !state.env.footnotes.refs) { return false; }\n    if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }\n    if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }\n\n    for (pos = start + 2; pos < max; pos++) {\n      if (state.src.charCodeAt(pos) === 0x0A /* linefeed */) { return false; }\n      if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n        break;\n      }\n    }\n\n    if (pos === start + 2) { return false; } // no empty footnote labels\n    if (pos >= max) { return false; }\n    pos++;\n\n    label = state.src.slice(start + 2, pos - 1);\n    if (!label || !label.match(/^(\\S+)\\s+(.+)$/)) { return false; }\n    label = RegExp.$1;\n    let text = RegExp.$2;\n\n    if (typeof state.env.footnotes.refs[':' + label] === 'undefined') { return false; }\n\n    if (!silent) {\n      if (!state.env.footnotes.list) { state.env.footnotes.list = []; }\n\n      if (state.env.footnotes.refs[':' + label] < 0) {\n        footnoteId = state.env.footnotes.list.length;\n        state.env.footnotes.list[footnoteId] = {\n          label,\n          count: 0\n        };\n        state.env.footnotes.refs[':' + label] = footnoteId;\n      } else {\n        footnoteId = state.env.footnotes.refs[':' + label];\n      }\n\n      footnoteSubId = state.env.footnotes.list[footnoteId].count;\n      state.env.footnotes.list[footnoteId].count++;\n\n      token = state.push('footnote_ref', '', 0);\n      token.meta = {\n        id: footnoteId,\n        subId: footnoteSubId,\n        label,\n        text\n      };\n\n      update_end_of_block_marker(state, footnoteId);\n\n      //md.block.ruler.enable('footnote_mark_end_of_block');\n    }\n\n    state.pos = pos;\n    state.posMax = max;\n    return true;\n  }\n\n  // Process footnote references ([^...])\n  function footnote_ref(state, silent) {\n    let label,\n        pos,\n        footnoteId,\n        footnoteSubId,\n        token,\n        max = state.posMax,\n        start = state.pos;\n\n    // should be at least 4 chars - \"[^x]\"\n    if (start + 3 > max) { return false; }\n\n    if (!state.env.footnotes || !state.env.footnotes.refs) { return false; }\n    if (state.src.charCodeAt(start) !== 0x5B/* [ */) { return false; }\n    if (state.src.charCodeAt(start + 1) !== 0x5E/* ^ */) { return false; }\n\n    for (pos = start + 2; pos < max; pos++) {\n      if (state.src.charCodeAt(pos) === 0x20) { return false; }\n      if (state.src.charCodeAt(pos) === 0x0A) { return false; }\n      if (state.src.charCodeAt(pos) === 0x5D /* ] */) {\n        break;\n      }\n    }\n\n    if (pos === start + 2) { return false; } // no empty footnote labels\n    if (pos >= max) { return false; }\n    pos++;\n\n    label = state.src.slice(start + 2, pos - 1);\n    if (typeof state.env.footnotes.refs[':' + label] === 'undefined') { return false; }\n\n    if (!silent) {\n      if (!state.env.footnotes.list) { state.env.footnotes.list = []; }\n\n      if (state.env.footnotes.refs[':' + label] < 0) {\n        footnoteId = state.env.footnotes.list.length;\n        state.env.footnotes.list[footnoteId] = {\n          label,\n          count: 0\n        };\n        state.env.footnotes.refs[':' + label] = footnoteId;\n      } else {\n        footnoteId = state.env.footnotes.refs[':' + label];\n      }\n\n      footnoteSubId = state.env.footnotes.list[footnoteId].count;\n      state.env.footnotes.list[footnoteId].count++;\n\n      token = state.push('footnote_ref', '', 0);\n      token.meta = {\n        id: footnoteId,\n        subId: footnoteSubId,\n        label\n      };\n\n      update_end_of_block_marker(state, footnoteId);\n\n      //md.block.ruler.enable('footnote_mark_end_of_block');\n    }\n\n    state.pos = pos;\n    state.posMax = max;\n    return true;\n  }\n\n  // Glue footnote tokens into appropriate slots of token stream.\n  function footnote_tail(state, startLine, endLine, silent) {\n    let i, l, j, t, lastParagraph, token, tokens, current, currentRefToken,\n        lastRefIndex = 0,\n        insideRef = false,\n        refTokens = {};\n\n    console.error('@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@ TAIL');\n    if (!state.env.footnotes) {\n      // no footnotes at all? --> filter out all 'footnote_mark_end_of_block' chunks:\n      state.tokens = state.tokens.filter(function (tok, idx) {\n        return (tok.type !== 'footnote_mark_end_of_block');\n      });\n      return;\n    }\n\n    // Rewrite the tokenstream to place the aside-footnotes and section footnotes where they need to be:\n    let aside_list = [];\n    let section_list = [];\n    let end_list = [];\n\n    // extract the tokens constituting the footnote/sidenote *content* and\n    // store that bunch in `refTokens[:<currentLabel>]` instead, to be injected back into\n    // the tokenstream at the appropriate spots.\n    state.tokens = state.tokens.filter(function (tok, idx) {\n      switch (tok.type) {\n      // filter out 'footnote_mark_end_of_block' tokens which follow BLOCKS that do not contain any\n      // footnote/sidenote/endnote references:\n      case 'footnote_mark_end_of_block':\n        if (!tok.meta) return false;\n        if (!tok.meta.footnote_list) return false;\n        break;\n\n      case 'footnote_reference_open':\n        insideRef = true;\n        current = [];\n        currentRefToken = tok;\n        if (tok.meta.mode === '>') {\n          aside_list.push(idx);\n        }\n        return true;\n\n      case 'footnote_reference_close':\n        insideRef = false;\n        // prepend ':' to avoid conflict with Object.prototype members\n        refTokens[':' + currentRefToken.meta.label] = {\n          tokens: current,\n          meta: currentRefToken.meta\n        };\n        lastRefIndex = idx;\n        return true;\n      }\n      if (insideRef) {\n        current.push(tok);\n      }\n      return !insideRef;\n    });\n\n    lastRefIndex = plugin_options.atDocumentEnd ? state.tokens.length : state.tokens.length;\n\n    let list = state.env.footnotes.list;\n    if (!list) { return; }\n\n    let inject_tokens = [];\n\n    token = new state.Token('footnote_block_open', '', 1);\n    token.markup = plugin_options.headerFn(state);\n    inject_tokens.push(token);\n\n    for (i = 0, l = list.length; i < l; i++) {\n      let fn = list[i];\n      token      = new state.Token('footnote_open', '', 1);\n      token.meta = {\n        id: i,\n        label: fn.label\n      };\n      inject_tokens.push(token);\n\n      if (fn.tokens) {\n        // process an inline footnote text:\n        token          = new state.Token('paragraph_open', 'p', 1);\n        token.block    = true;\n        inject_tokens.push(token);\n\n        token          = new state.Token('inline', '', 0);\n        token.children = fn.tokens;\n        token.content  = fn.content;\n        inject_tokens.push(token);\n\n        token          = new state.Token('paragraph_close', 'p', -1);\n        token.block    = true;\n        inject_tokens.push(token);\n      } else if (fn.label) {\n        // process a labeled footnote:\n        let info = refTokens[':' + fn.label] || {};\n        inject_tokens = inject_tokens.concat(info.tokens || []);\n        if (info.meta) {\n          // also update the global footnote info list:\n          fn.labelOverride = info.meta.labelOverride;\n          fn.mode = info.meta.mode;\n        }\n      } else {\n        // nothing to inject\n        throw Error('unexpected: should never get here!');\n      }\n\n      if (inject_tokens[inject_tokens.length - 1].type === 'paragraph_close') {\n        lastParagraph = inject_tokens.pop();\n      } else {\n        lastParagraph = null;\n      }\n\n      t = Math.max(fn.count, 1);\n      for (j = 0; j < t; j++) {\n        token = new state.Token('footnote_anchor', '', 0);\n        token.meta = {\n          id: i,\n          subId: j,\n          label: fn.label\n        };\n        inject_tokens.push(token);\n      }\n\n      if (lastParagraph) {\n        inject_tokens.push(lastParagraph);\n      }\n\n      token = new state.Token('footnote_close', '', -1);\n      inject_tokens.push(token);\n    }\n\n    token = new state.Token('footnote_block_close', '', -1);\n    inject_tokens.push(token);\n    state.tokens.splice(lastRefIndex, 0, ...inject_tokens);\n\n    // Update state_block too as we have rewritten & REPLACED the token array earlier in this call:\n    // the reference `state.env.state_block.tokens` is still pointing to the OLD token array!\n    state.env.state_block.tokens = state.tokens;\n  }\n\n  // attach ourselves to the start of block handling too\n  md.block.ruler.before('table', 'footnote_mark_end_of_block', footnote_mark_end_of_block);\n\n  md.block.ruler.before('reference', 'footnote_def', footnote_def, { alt: [ 'paragraph', 'reference' ] });\n  md.inline.ruler.after('image', 'footnote_inline', footnote_inline);\n  md.inline.ruler.after('footnote_inline', 'footnote_ref_with_text', footnote_ref_with_text);\n  md.inline.ruler.after('footnote_ref_with_text', 'footnote_ref', footnote_ref);\n  md.core.ruler.after('inline', 'footnote_tail', footnote_tail);\n}\n"],"names":["anchorFnDefault","n","excludeSubId","tokens","idx","options","env","slf","prefix","docId","length","captionFnDefault","headerFnDefault","state","default_plugin_options","anchorFn","captionFn","headerFn","numberSequence","modeOverride","footnote_plugin","md","plugin_options","parseLinkLabel","helpers","isSpace","utils","Object","assign","determine_mode","mode","default_mode","includes","fromInput","determine_footnote_symbol","len","slot","Number","isFinite","delta","dupli","remainder","core","str","i","render_footnote_n","mark","meta","id","subId","render_footnote_mark","token","info","footnotes","list","labelOverride","render_footnote_anchor_name","render_footnote_anchor_nameRef","render_footnote_caption","render_footnote_ref","caption","refid","next_token","next_token_meta","bunched_footnote_refs","type","text","render_footnote_block_open","header","markup","xhtmlOut","render_footnote_block_close","render_footnote_reference_open","render_footnote_reference_close","render_footnote_mark_end_of_block","render_footnote_open","render_footnote_close","render_footnote_anchor","renderer","rules","footnote_ref","footnote_block_open","footnote_block_close","footnote_reference_open","footnote_reference_close","footnote_mark_end_of_block","footnote_open","footnote_close","footnote_anchor","find_end_of_block_marker","startIndex","Token","hidden","push","update_end_of_block_marker","footnoteId","parentState","parentIndex","parentTokenIndex","markerTokenIndex","footnote_list","startLine","endLine","silent","footnote_def","oldBMark","oldTShift","oldSCount","oldParentType","pos","label","initial","offset","ch","posAfterColon","start","bMarks","tShift","max","eMarks","src","charCodeAt","labelEnd","mode_rec","refs","slice","match","RegExp","$1","$2","console","error","sCount","parentType","blkIndent","block","tokenize","footnote_inline","labelStart","posMax","parentEnv","inline","parse","content","footnote_ref_with_text","footnoteSubId","count","footnote_tail","l","j","t","lastParagraph","current","currentRefToken","lastRefIndex","insideRef","refTokens","filter","tok","atDocumentEnd","inject_tokens","fn","children","concat","Error","pop","Math","splice","state_block","ruler","before","alt","after"],"mappings":"AAAA;AACA;AAGA;AACA;AAEA,SAASA,eAAT,CAAyBC,CAAzB,EAA4BC,YAA5B,EAA0CC,MAA1C,EAAkDC,GAAlD,EAAuDC,OAAvD,EAAgEC,GAAhE,EAAqEC,GAArE;AACE,MAAIC,MAAM,GAAG,EAAb;;AACA,MAAI,OAAOF,GAAG,CAACG,KAAX,KAAqB,QAArB,IAAiCH,GAAG,CAACG,KAAJ,CAAUC,MAAV,GAAmB,CAAxD,EAA2D;AACzDF,IAAAA,MAAM,GAAG,MAAMF,GAAG,CAACG,KAAV,GAAkB,GAA3B;AACD;;AACD,SAAOD,MAAM,GAAGP,CAAhB;AACD;;AAED,SAASU,gBAAT,CAA0BV,CAA1B,EAA6BE,MAA7B,EAAqCC,GAArC,EAA0CC,OAA1C,EAAmDC,GAAnD,EAAwDC,GAAxD;AACE;AACA,SAAO,KAAKN,CAAZ;AACD;;AAED,SAASW,eAAT,CAAyBC,KAAzB;AACE,SAAO,EAAP;AACD;AAGD;;;;;;;;;;;;;;;;;;;;AAmBA,MAAMC,sBAAsB,GAAG;AAC7B;AAEAC,EAAAA,QAAQ,EAAEf,eAHmB;AAI7BgB,EAAAA,SAAS,EAAEL,gBAJkB;AAK7BM,EAAAA,QAAQ,EAAEL,eALmB;AAO7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAM,EAAAA,cAAc,EAAE,CAAE,GAAF,EAAO,GAAP,EAAY,IAAZ,EAAkB,IAAlB,EAAwB,GAAxB,EAA6B,CAA7B,CAtBa;AAwB7B;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,EAAAA,YAAY,EAAE;AA/Be,CAA/B;SAkCwBC,gBAAgBC,IAAIC;AAC1C,MAAIC,cAAc,GAAGF,EAAE,CAACG,OAAH,CAAWD,cAAhC;AAAA,MACIE,OAAO,GAAGJ,EAAE,CAACK,KAAH,CAASD,OADvB;AAGAH,EAAAA,cAAc,GAAGK,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBN,cAAlB,EAAkCR,sBAAlC,CAAjB;;AAEA,WAASe,cAAT,CAAwBC,IAAxB,EAAsCC,YAAtC;AACE,QAAIT,cAAc,CAACH,YAAf,IAA+B,MAAMa,QAAN,CAAeV,cAAc,CAACH,YAA9B,CAAnC,EAAgF;AAC9E,aAAO;AACLW,QAAAA,IAAI,EAAER,cAAc,CAACH,YADhB;AAELc,QAAAA,SAAS,EAAE;AAFN,OAAP;AAID;;AACD,QAAI,MAAMD,QAAN,CAAeF,IAAf,CAAJ,EAA0B;AACxB,aAAO;AACLA,QAAAA,IADK;AAELG,QAAAA,SAAS,EAAE;AAFN,OAAP;AAID;;AACD,WAAO;AACLH,MAAAA,IAAI,EAAEC,YADD;AAELE,MAAAA,SAAS,EAAE;AAFN,KAAP;AAID;;AAED,WAASC,yBAAT,CAAmC9B,GAAnC;AACE,QAAIkB,cAAc,CAACJ,cAAf,IAAiC,IAAjC,IAAyCI,cAAc,CAACJ,cAAf,CAA8BR,MAA9B,KAAyC,CAAtF,EAAyF;AAAE,aAAON,GAAG,GAAG,CAAb;AAAiB;;AAC5G,UAAM+B,GAAG,GAAGb,cAAc,CAACJ,cAAf,CAA8BR,MAA1C;;AACA,QAAIN,GAAG,IAAI+B,GAAX,EAAgB;AACd;AACA,UAAIC,IAAI,GAAGd,cAAc,CAACJ,cAAf,CAA8BiB,GAAG,GAAG,CAApC,CAAX;;AACA,UAAIE,MAAM,CAACC,QAAP,CAAgBF,IAAhB,CAAJ,EAA2B;AACzB,YAAIG,KAAK,GAAGnC,GAAG,GAAG+B,GAAN,GAAY,CAAxB;AACA,eAAOC,IAAI,GAAGG,KAAd;AACD,OANa;;;AASd,UAAIC,KAAK,GAAIpC,GAAG,GAAG+B,GAAP,GAAc,CAA1B,CATc;;AAUd,UAAIM,SAAS,GAAGrC,GAAG,GAAG+B,GAAtB;AACA,UAAIO,IAAI,GAAGpB,cAAc,CAACJ,cAAf,CAA8BuB,SAA9B,CAAX;AACA,UAAIE,GAAG,GAAGD,IAAV;;AACA,WAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,KAApB,EAA2BI,CAAC,EAA5B,EAAgC;AAC9BD,QAAAA,GAAG,IAAID,IAAP;AACD;;AACD,aAAOC,GAAP;AAED;;AAED,WAAOrB,cAAc,CAACJ,cAAf,CAA8Bd,GAA9B,CAAP;AACD;;AAED,WAASyC,iBAAT,CAA2B1C,MAA3B,EAAmCC,GAAnC,EAAwCF,YAAxC;AACE,QAAI4C,IAAI,GAAG3C,MAAM,CAACC,GAAD,CAAN,CAAY2C,IAAZ,CAAiBC,EAAjB,GAAsB,CAAjC;AACA,QAAI/C,CAAC,GAAG,KAAK6C,IAAb;;AAEA,QAAI,CAAC5C,YAAD,IAAiBC,MAAM,CAACC,GAAD,CAAN,CAAY2C,IAAZ,CAAiBE,KAAjB,GAAyB,CAA9C,EAAiD;AAC/ChD,MAAAA,CAAC,IAAI,MAAME,MAAM,CAACC,GAAD,CAAN,CAAY2C,IAAZ,CAAiBE,KAA5B;AACD;;AAED,WAAOhD,CAAP;AACD;;AAED,WAASiD,oBAAT,CAA8B/C,MAA9B,EAAsCC,GAAtC,EAA2CE,GAA3C;AACE,QAAI6C,KAAK,GAAGhD,MAAM,CAACC,GAAD,CAAlB;AACA,QAAIgD,IAAI,GAAG9C,GAAG,CAAC+C,SAAJ,CAAcC,IAAd,CAAmBH,KAAK,CAACJ,IAAN,CAAWC,EAA9B,KAAqC,EAAhD;AACA,QAAIO,aAAa,GAAGH,IAAI,CAACG,aAAzB;AACA,QAAIT,IAAI,GAAGS,aAAa,IAAIrB,yBAAyB,CAACiB,KAAK,CAACJ,IAAN,CAAWC,EAAZ,CAArD;AACA,QAAI/C,CAAC,GAAG,KAAK6C,IAAb;;AACA,WAAO7C,CAAP;AACD;;AAED,WAASuD,2BAAT,CAAqCrD,MAArC,EAA6CC,GAA7C,EAAkDC,OAAlD,EAA2DC,GAA3D,EAAgEC,GAAhE;AACE,QAAIN,CAAC,GAAG4C,iBAAiB,CAAC1C,MAAD,EAASC,GAAT,EAAc,IAAd,CAAzB;AACA,WAAOkB,cAAc,CAACP,QAAf,CAAwBd,CAAxB,EAA2B,IAA3B,EAAiCE,MAAjC,EAAyCC,GAAzC,EAA8CC,OAA9C,EAAuDC,GAAvD,EAA4DC,GAA5D,CAAP;AACD;;AAED,WAASkD,8BAAT,CAAwCtD,MAAxC,EAAgDC,GAAhD,EAAqDC,OAArD,EAA8DC,GAA9D,EAAmEC,GAAnE;AACE,QAAIN,CAAC,GAAG4C,iBAAiB,CAAC1C,MAAD,EAASC,GAAT,EAAc,KAAd,CAAzB;AACA,WAAOkB,cAAc,CAACP,QAAf,CAAwBd,CAAxB,EAA2B,KAA3B,EAAkCE,MAAlC,EAA0CC,GAA1C,EAA+CC,OAA/C,EAAwDC,GAAxD,EAA6DC,GAA7D,CAAP;AACD;;AAED,WAASmD,uBAAT,CAAiCvD,MAAjC,EAAyCC,GAAzC,EAA8CC,OAA9C,EAAuDC,GAAvD,EAA4DC,GAA5D;AACE,QAAIN,CAAC,GAAGiD,oBAAoB,CAAC/C,MAAD,EAASC,GAAT,EAAcE,GAAd,CAA5B;AACA,WAAOgB,cAAc,CAACN,SAAf,CAAyBf,CAAzB,EAA4BE,MAA5B,EAAoCC,GAApC,EAAyCC,OAAzC,EAAkDC,GAAlD,EAAuDC,GAAvD,CAAP;AACD;;AAED,WAASoD,mBAAT,CAA6BxD,MAA7B,EAAqCC,GAArC,EAA0CC,OAA1C,EAAmDC,GAAnD,EAAwDC,GAAxD;AACE,QAAIyC,EAAE,GAAQQ,2BAA2B,CAACrD,MAAD,EAASC,GAAT,EAAcC,OAAd,EAAuBC,GAAvB,EAA4BC,GAA5B,CAAzC;AACA,QAAIqD,OAAO,GAAGF,uBAAuB,CAACvD,MAAD,EAASC,GAAT,EAAcC,OAAd,EAAuBC,GAAvB,EAA4BC,GAA5B,CAArC;AACA,QAAIsD,KAAK,GAAKJ,8BAA8B,CAACtD,MAAD,EAASC,GAAT,EAAcC,OAAd,EAAuBC,GAAvB,EAA4BC,GAA5B,CAA5C;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAMuD,UAAU,GAAG3D,MAAM,CAACC,GAAG,GAAG,CAAP,CAAN,IAAmB,EAAtC;AACA,UAAM2D,eAAe,GAAGD,UAAU,CAACf,IAAX,IAAmB,EAA3C;AACA,UAAMiB,qBAAqB,GAAGF,UAAU,CAACG,IAAX,KAAoB,cAApB,IAAsC,CAACF,eAAe,CAACG,IAArF;;AAEA,QAAI/D,MAAM,CAACC,GAAD,CAAN,CAAY2C,IAAZ,CAAiBmB,IAArB,EAA2B;AACzB,aAAO,iBAAiBlB,EAAjB,GAAsB,aAAtB,GAAsCa,KAAtC,GAA8C,IAA9C,GACD1D,MAAM,CAACC,GAAD,CAAN,CAAY2C,IAAZ,CAAiBmB,IADhB,GAED,4BAFC,GAE8BN,OAF9B,GAEwC,YAFxC,IAGAI,qBAAqB,GAAG,mCAAH,GAAyC,EAH9D,CAAP;AAID;;AAED,oDAAiDhB,gBAAkBa,UAAYD,cAAgBI,qBAAqB,GAAG,GAAH,GAAS,UAA7H;AACD;;AAED,WAASG,0BAAT,CAAoChE,MAApC,EAA4CC,GAA5C,EAAiDC,OAAjD;AACE,QAAI+D,MAAM,GAAGjE,MAAM,CAACC,GAAD,CAAN,CAAYiE,MAAzB;AACA,WAAO,CAAChE,OAAO,CAACiE,QAAR,GAAmB,gCAAnB,GAAsD,8BAAvD,IACF,+BADE,IAECF,MAAM,GAAG,kCAAkCA,MAAlC,GAA2C,OAA9C,GAAwD,EAF/D,IAGF,+BAHL;AAID;;AAED,WAASG,2BAAT;AACE,WAAO,qBAAP;AACD;;AAED,WAASC,8BAAT,CAAwCrE,MAAxC,EAAgDC,GAAhD,EAAqDC,OAArD;AACE,WAAO,qCAAP;AACD;;AAED,WAASoE,+BAAT;AACE,WAAO,mCAAP;AACD;;AAED,WAASC,iCAAT;AACE,WAAO,iCAAP;AACD;;AAED,WAASC,oBAAT,CAA8BxE,MAA9B,EAAsCC,GAAtC,EAA2CC,OAA3C,EAAoDC,GAApD,EAAyDC,GAAzD;AACE,QAAIyC,EAAE,GAAGQ,2BAA2B,CAACrD,MAAD,EAASC,GAAT,EAAcC,OAAd,EAAuBC,GAAvB,EAA4BC,GAA5B,CAApC;AACA,QAAIqD,OAAO,GAAGF,uBAAuB,CAACvD,MAAD,EAASC,GAAT,EAAcC,OAAd,EAAuBC,GAAvB,EAA4BC,GAA5B,CAArC;AAGA;AACA;;AACA,sCAAmCyC,oDAAsDY,yEAA2EA,qDAApK;AACD;;AAED,WAASgB,qBAAT;AACE,WAAO,gBAAP;AACD;;AAED,WAASC,sBAAT,CAAgC1E,MAAhC,EAAwCC,GAAxC,EAA6CC,OAA7C,EAAsDC,GAAtD,EAA2DC,GAA3D;AACE,QAAIsD,KAAK,GAAGhB,iBAAiB,CAAC1C,MAAD,EAASC,GAAT,EAAc,KAAd,CAA7B;AACAyD,IAAAA,KAAK,GAAGvC,cAAc,CAACP,QAAf,CAAwB8C,KAAxB,EAA+B,KAA/B,EAAsC1D,MAAtC,EAA8CC,GAA9C,EAAmDC,OAAnD,EAA4DC,GAA5D,EAAiEC,GAAjE,CAAR;AAEA;;AACA,WAAO,qBAAqBsD,KAArB,GAA6B,6CAApC;AACD;;AAGDxC,EAAAA,EAAE,CAACyD,QAAH,CAAYC,KAAZ,CAAkBC,YAAlB,GAA0CrB,mBAA1C;AACAtC,EAAAA,EAAE,CAACyD,QAAH,CAAYC,KAAZ,CAAkBE,mBAAlB,GAA0Cd,0BAA1C;AACA9C,EAAAA,EAAE,CAACyD,QAAH,CAAYC,KAAZ,CAAkBG,oBAAlB,GAA0CX,2BAA1C;AACAlD,EAAAA,EAAE,CAACyD,QAAH,CAAYC,KAAZ,CAAkBI,uBAAlB,GAA8CX,8BAA9C;AACAnD,EAAAA,EAAE,CAACyD,QAAH,CAAYC,KAAZ,CAAkBK,wBAAlB,GAA8CX,+BAA9C;AACApD,EAAAA,EAAE,CAACyD,QAAH,CAAYC,KAAZ,CAAkBM,0BAAlB,GAA+CX,iCAA/C;AACArD,EAAAA,EAAE,CAACyD,QAAH,CAAYC,KAAZ,CAAkBO,aAAlB,GAA0CX,oBAA1C;AACAtD,EAAAA,EAAE,CAACyD,QAAH,CAAYC,KAAZ,CAAkBQ,cAAlB,GAA0CX,qBAA1C;AACAvD,EAAAA,EAAE,CAACyD,QAAH,CAAYC,KAAZ,CAAkBS,eAAlB,GAA0CX,sBAA1C;;AAEA,WAASY,wBAAT,CAAkC5E,KAAlC,EAAyC6E,UAAzC;AACE,QAAItF,GAAJ,EAAS+B,GAAT;AACA,QAAIhC,MAAM,GAAGU,KAAK,CAACV,MAAnB;;AACA,SAAKC,GAAG,GAAGsF,UAAN,EAAkBvD,GAAG,GAAGhC,MAAM,CAACO,MAApC,EAA4CN,GAAG,GAAG+B,GAAlD,EAAuD/B,GAAG,EAA1D,EAA8D;AAC5D,UAAID,MAAM,CAACC,GAAD,CAAN,CAAY6D,IAAZ,KAAqB,4BAAzB,EAAuD;AAAE,eAAO7D,GAAP;AAAa;AACvE;AAED;AAEA;AACA;AACA;;;AACA,QAAI+C,KAAK,GAAG,IAAItC,KAAK,CAAC8E,KAAV,CAAgB,4BAAhB,EAA8C,EAA9C,EAAkD,CAAlD,CAAZ;AACAxC,IAAAA,KAAK,CAACyC,MAAN,GAAe,IAAf;AAEA;AACA;;AACAzF,IAAAA,MAAM,CAAC0F,IAAP,CAAY1C,KAAZ;AACA,WAAOhD,MAAM,CAACO,MAAP,GAAgB,CAAvB;AACD;;AAED,WAASoF,0BAAT,CAAoCjF,KAApC,EAA2CkF,UAA3C;AACE;AACA;AACA;AACA,QAAIC,WAAW,GAAGnF,KAAK,CAACP,GAAN,CAAU0F,WAA5B;AACA,QAAIC,WAAW,GAAGpF,KAAK,CAACP,GAAN,CAAU4F,gBAA5B;AACA,QAAIC,gBAAgB,GAAGV,wBAAwB,CAACO,WAAD,EAAcC,WAAW,GAAG,CAA5B,CAA/C;AACA,QAAI9C,KAAK,GAAG6C,WAAW,CAAC7F,MAAZ,CAAmBgG,gBAAnB,CAAZ;AACA,QAAI,CAAChD,KAAK,CAACJ,IAAX,EAAiBI,KAAK,CAACJ,IAAN,GAAa,EAAb;AACjB,QAAI,CAACI,KAAK,CAACJ,IAAN,CAAWqD,aAAhB,EAA+BjD,KAAK,CAACJ,IAAN,CAAWqD,aAAX,GAA2B,EAA3B;AAC/BjD,IAAAA,KAAK,CAACJ,IAAN,CAAWqD,aAAX,CAAyBP,IAAzB,CAA8BE,UAA9B;AACD;;;AAGD,WAASV,0BAAT,CAAoCxE,KAApC,EAA2CwF,SAA3C,EAAsDC,OAAtD,EAA+DC,MAA/D;AACE,QAAI,CAACA,MAAD,IAAW1F,KAAK,CAACV,MAAN,CAAaO,MAAb,GAAsB,CAArC,EAAwC;AACtC,UAAIyC,KAAK,GAAGtC,KAAK,CAACgF,IAAN,CAAW,4BAAX,EAAyC,EAAzC,EAA6C,CAA7C,CAAZ;AACA1C,MAAAA,KAAK,CAACyC,MAAN,GAAe,IAAf;AACD;;AACD,WAAO,KAAP;AACD;;;AAGD,WAASY,YAAT,CAAsB3F,KAAtB,EAA6BwF,SAA7B,EAAwCC,OAAxC,EAAiDC,MAAjD;AACE,QAAIE,QAAJ;AAAA,QAAcC,SAAd;AAAA,QAAyBC,SAAzB;AAAA,QAAoCC,aAApC;AAAA,QAAmDC,GAAnD;AAAA,QAAwDC,KAAxD;AAAA,QAA+D3D,KAA/D;AAAA,QACI4D,OADJ;AAAA,QACaC,MADb;AAAA,QACqBC,EADrB;AAAA,QACyBC,aADzB;AAAA,QAEIC,KAAK,GAAGtG,KAAK,CAACuG,MAAN,CAAaf,SAAb,IAA0BxF,KAAK,CAACwG,MAAN,CAAahB,SAAb,CAFtC;AAAA,QAGIiB,GAAG,GAAGzG,KAAK,CAAC0G,MAAN,CAAalB,SAAb,CAHV;;AAMA,QAAIc,KAAK,GAAG,CAAR,GAAYG,GAAhB,EAAqB;AAAE,aAAO,KAAP;AAAe;;AAEtC,QAAIzG,KAAK,CAAC2G,GAAN,CAAUC,UAAV,CAAqBN,KAArB,MAAgC;AAAI;AAAxC,MAAiD;AAAE,eAAO,KAAP;AAAe;;AAClE,QAAItG,KAAK,CAAC2G,GAAN,CAAUC,UAAV,CAAqBN,KAAK,GAAG,CAA7B,MAAoC;AAAI;AAA5C,MAAqD;AAAE,eAAO,KAAP;AAAe;;AAEtE,SAAKN,GAAG,GAAGM,KAAK,GAAG,CAAnB,EAAsBN,GAAG,GAAGS,GAA5B,EAAiCT,GAAG,EAApC,EAAwC;AACtC,UAAIhG,KAAK,CAAC2G,GAAN,CAAUC,UAAV,CAAqBZ,GAArB,MAA8B;AAAK;AAAvC,QAAiD;AAAE,iBAAO,KAAP;AAAe;;AAClE,UAAIhG,KAAK,CAAC2G,GAAN,CAAUC,UAAV,CAAqBZ,GAArB,MAA8B;AAAK;AAAvC,QAAgD;AAC9C;AACD;AACF;;AACD,QAAIa,QAAQ,GAAGb,GAAf;;AAEA,QAAIA,GAAG,KAAKM,KAAK,GAAG,CAApB,EAAuB;AAAE,aAAO,KAAP;AAAe;;;AACxC,QAAIN,GAAG,GAAG,CAAN,IAAWS,GAAX,IAAkBzG,KAAK,CAAC2G,GAAN,CAAUC,UAAV,CAAqB,EAAEZ,GAAvB,MAAgC;AAAK;AAA3D,MAAoE;AAAE,eAAO,KAAP;AAAe;;AAErF,QAAIc,QAAQ,GAAG9F,cAAc,CAAChB,KAAK,CAAC2G,GAAN,CAAUX,GAAG,GAAG,CAAhB,CAAD,EAAqB,GAArB,CAA7B;;AACA,QAAIc,QAAQ,CAAC1F,SAAb,EACE4E,GAAG;AACL,QAAI/E,IAAI,GAAG6F,QAAQ,CAAC7F,IAApB;;AAEA,QAAI+E,GAAG,GAAG,CAAN,IAAWS,GAAX,IAAkBzG,KAAK,CAAC2G,GAAN,CAAUC,UAAV,CAAqB,EAAEZ,GAAvB,MAAgC;AAAK;AAA3D,MAAwE;AAAE,eAAO,KAAP;AAAe;;AACzF,QAAIN,MAAJ,EAAY;AAAE,aAAO,IAAP;AAAc;;AAC5BM,IAAAA,GAAG;;AAEH,QAAI,CAAChG,KAAK,CAACP,GAAN,CAAU+C,SAAf,EAA0B;AAAExC,MAAAA,KAAK,CAACP,GAAN,CAAU+C,SAAV,GAAsB,EAAtB;AAA2B;;AACvD,QAAI,CAACxC,KAAK,CAACP,GAAN,CAAU+C,SAAV,CAAoBuE,IAAzB,EAA+B;AAAE/G,MAAAA,KAAK,CAACP,GAAN,CAAU+C,SAAV,CAAoBuE,IAApB,GAA2B,EAA3B;AAAgC;;AACjEd,IAAAA,KAAK,GAAGjG,KAAK,CAAC2G,GAAN,CAAUK,KAAV,CAAgBV,KAAK,GAAG,CAAxB,EAA2BO,QAA3B,CAAR;AACA,QAAIxD,IAAJ;;AACA,QAAI4C,KAAK,CAACgB,KAAN,CAAY,gBAAZ,CAAJ,EAAmC;AACjChB,MAAAA,KAAK,GAAGiB,MAAM,CAACC,EAAf;AACA9D,MAAAA,IAAI,GAAG6D,MAAM,CAACE,EAAd;AACD;;AAEDC,IAAAA,OAAO,CAACC,KAAR,CAAc,oBAAd,EAAoC;AAAErB,MAAAA,KAAF;AAAS5C,MAAAA,IAAT;AAAewD,MAAAA,QAAf;AAAyBb,MAAAA,GAAzB;AAA8BM,MAAAA;AAA9B,KAApC;AACAtG,IAAAA,KAAK,CAACP,GAAN,CAAU+C,SAAV,CAAoBuE,IAApB,CAAyB,MAAMd,KAA/B,IAAwC,CAAC,CAAzC;AAEA3D,IAAAA,KAAK,GAAGtC,KAAK,CAACgF,IAAN,CAAW,yBAAX,EAAsC,EAAtC,EAA0C,CAA1C,CAAR;AACA1C,IAAAA,KAAK,CAACJ,IAAN,GAAa;AACXC,MAAAA,EAAE,EAAE,CAAC,CADM;AAEX8D,MAAAA,KAFW;AAGXvD,MAAAA,aAAa,EAAEW,IAHJ;AAIXpC,MAAAA;AAJW,KAAb;AAMAqB,IAAAA,KAAK,CAACyC,MAAN,GAAe,IAAf;AAEAa,IAAAA,QAAQ,GAAG5F,KAAK,CAACuG,MAAN,CAAaf,SAAb,CAAX;AACAK,IAAAA,SAAS,GAAG7F,KAAK,CAACwG,MAAN,CAAahB,SAAb,CAAZ;AACAM,IAAAA,SAAS,GAAG9F,KAAK,CAACuH,MAAN,CAAa/B,SAAb,CAAZ;AACAO,IAAAA,aAAa,GAAG/F,KAAK,CAACwH,UAAtB;AAEAnB,IAAAA,aAAa,GAAGL,GAAhB;AACAE,IAAAA,OAAO,GAAGC,MAAM,GAAGnG,KAAK,CAACuH,MAAN,CAAa/B,SAAb,IAA0BQ,GAA1B,IAAiChG,KAAK,CAACuG,MAAN,CAAaf,SAAb,IAA0BxF,KAAK,CAACwG,MAAN,CAAahB,SAAb,CAA3D,CAAnB;;AAEA,WAAOQ,GAAG,GAAGS,GAAb,EAAkB;AAChBL,MAAAA,EAAE,GAAGpG,KAAK,CAAC2G,GAAN,CAAUC,UAAV,CAAqBZ,GAArB,CAAL;;AAEA,UAAIpF,OAAO,CAACwF,EAAD,CAAX,EAAiB;AACf,YAAIA,EAAE,KAAK,IAAX,EAAiB;AACfD,UAAAA,MAAM,IAAI,IAAIA,MAAM,GAAG,CAAvB;AACD,SAFD,MAEO;AACLA,UAAAA,MAAM;AACP;AACF,OAND,MAMO;AACL;AACD;;AAEDH,MAAAA,GAAG;AACJ;;AAEDhG,IAAAA,KAAK,CAACwG,MAAN,CAAahB,SAAb,IAA0BQ,GAAG,GAAGK,aAAhC;AACArG,IAAAA,KAAK,CAACuH,MAAN,CAAa/B,SAAb,IAA0BW,MAAM,GAAGD,OAAnC;AAEAlG,IAAAA,KAAK,CAACuG,MAAN,CAAaf,SAAb,IAA0Ba,aAA1B;AACArG,IAAAA,KAAK,CAACyH,SAAN,IAAmB,CAAnB;AACAzH,IAAAA,KAAK,CAACwH,UAAN,GAAmB,UAAnB;;AAEA,QAAIxH,KAAK,CAACuH,MAAN,CAAa/B,SAAb,IAA0BxF,KAAK,CAACyH,SAApC,EAA+C;AAC7CzH,MAAAA,KAAK,CAACuH,MAAN,CAAa/B,SAAb,KAA2BxF,KAAK,CAACyH,SAAjC;AACD;;AAEDzH,IAAAA,KAAK,CAACQ,EAAN,CAASkH,KAAT,CAAeC,QAAf,CAAwB3H,KAAxB,EAA+BwF,SAA/B,EAA0CC,OAA1C,EAAmD,IAAnD;AAEAzF,IAAAA,KAAK,CAACwH,UAAN,GAAmBzB,aAAnB;AACA/F,IAAAA,KAAK,CAACyH,SAAN,IAAmB,CAAnB;AACAzH,IAAAA,KAAK,CAACwG,MAAN,CAAahB,SAAb,IAA0BK,SAA1B;AACA7F,IAAAA,KAAK,CAACuH,MAAN,CAAa/B,SAAb,IAA0BM,SAA1B;AACA9F,IAAAA,KAAK,CAACuG,MAAN,CAAaf,SAAb,IAA0BI,QAA1B;AAEAtD,IAAAA,KAAK,GAAGtC,KAAK,CAACgF,IAAN,CAAW,0BAAX,EAAuC,EAAvC,EAA2C,CAAC,CAA5C,CAAR;AAEA,WAAO,IAAP;AACD;;;AAGD,WAAS4C,eAAT,CAAyB5H,KAAzB,EAAgC0F,MAAhC;AACE,QAAImC,UAAJ;AAAA,QACIhB,QADJ;AAAA,QAEI3B,UAFJ;AAAA,QAGI5C,KAHJ;AAAA,QAIIhD,MAJJ;AAAA,QAKImH,GAAG,GAAGzG,KAAK,CAAC8H,MALhB;AAAA,QAMIxB,KAAK,GAAGtG,KAAK,CAACgG,GANlB;;AAQA,QAAIM,KAAK,GAAG,CAAR,IAAaG,GAAjB,EAAsB;AAAE,aAAO,KAAP;AAAe;;AACvC,QAAIzG,KAAK,CAAC2G,GAAN,CAAUC,UAAV,CAAqBN,KAArB,MAAgC;AAAI;AAAxC,MAAiD;AAAE,eAAO,KAAP;AAAe;;AAClE,QAAItG,KAAK,CAAC2G,GAAN,CAAUC,UAAV,CAAqBN,KAAK,GAAG,CAA7B,MAAoC;AAAI;AAA5C,MAAqD;AAAE,eAAO,KAAP;AAAe;;AAEtEuB,IAAAA,UAAU,GAAGvB,KAAK,GAAG,CAArB;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,QAAIQ,QAAQ,GAAG9F,cAAc,CAAChB,KAAK,CAAC2G,GAAN,CAAUL,KAAK,GAAG,CAAlB,CAAD,EAAuB,GAAvB,CAA7B;;AACA,QAAIQ,QAAQ,CAAC1F,SAAb,EACEyG,UAAU;AACZ,QAAI5G,IAAI,GAAG6F,QAAQ,CAAC7F,IAApB;AAEA4F,IAAAA,QAAQ,GAAGnG,cAAc,CAACV,KAAD,EAAQsG,KAAK,GAAG,CAAhB,CAAzB;;AAGA,QAAIO,QAAQ,GAAG,CAAf,EAAkB;AAAE,aAAO,KAAP;AAAe;AAGnC;AACA;;;AACA,QAAI,CAACnB,MAAL,EAAa;AACX;AACA;AACA;AACA;AACA,UAAIP,WAAW,GAAGnF,KAAK,CAACP,GAAN,CAAU0F,WAA5B;AACA,UAAI4C,SAAS,GAAG5C,WAAW,CAAC1F,GAA5B;;AACA,UAAI,CAACsI,SAAS,CAACvF,SAAf,EAA0B;AAAEuF,QAAAA,SAAS,CAACvF,SAAV,GAAsB,EAAtB;AAA2B;;AACvD,UAAI,CAACuF,SAAS,CAACvF,SAAV,CAAoBC,IAAzB,EAA+B;AAAEsF,QAAAA,SAAS,CAACvF,SAAV,CAAoBC,IAApB,GAA2B,EAA3B;AAAgC;;AACjEyC,MAAAA,UAAU,GAAG6C,SAAS,CAACvF,SAAV,CAAoBC,IAApB,CAAyB5C,MAAtC,CATW;AAYX;;AACAkI,MAAAA,SAAS,CAACvF,SAAV,CAAoBC,IAApB,CAAyByC,UAAzB,IAAuC,IAAvC;AAEA5C,MAAAA,KAAK,GAAGtC,KAAK,CAACgF,IAAN,CAAW,cAAX,EAA2B,EAA3B,EAA+B,CAA/B,CAAR,CAfW;;AAiBX1C,MAAAA,KAAK,CAACJ,IAAN,GAAa;AACXC,QAAAA,EAAE,EAAE+C,UADO;AAEXjE,QAAAA;AAFW,OAAb;AAKAjB,MAAAA,KAAK,CAACQ,EAAN,CAASwH,MAAT,CAAgBC,KAAhB,CACEjI,KAAK,CAAC2G,GAAN,CAAUK,KAAV,CAAgBa,UAAhB,EAA4BhB,QAA5B,CADF,EAEE7G,KAAK,CAACQ,EAFR,EAGER,KAAK,CAACP,GAHR,EAIEH,MAAM,GAAG,EAJX,EAtBW;;AA8BXyI,MAAAA,SAAS,CAACvF,SAAV,CAAoBC,IAApB,CAAyByC,UAAzB,IAAuC;AACrCgD,QAAAA,OAAO,EAAElI,KAAK,CAAC2G,GAAN,CAAUK,KAAV,CAAgBa,UAAhB,EAA4BhB,QAA5B,CAD4B;AAErCvH,QAAAA,MAFqC;AAGrC2B,QAAAA;AAHqC,OAAvC,CA9BW;AAqCX;AACA;;AACAgE,MAAAA,0BAA0B,CAACjF,KAAD,EAAQkF,UAAR,CAA1B,CAvCW;AA0CZ;;AAEDlF,IAAAA,KAAK,CAACgG,GAAN,GAAYa,QAAQ,GAAG,CAAvB;AACA7G,IAAAA,KAAK,CAAC8H,MAAN,GAAerB,GAAf;AACA,WAAO,IAAP;AACD;;;AAGD,WAAS0B,sBAAT,CAAgCnI,KAAhC,EAAuC0F,MAAvC;AACE,QAAIO,KAAJ;AAAA,QACID,GADJ;AAAA,QAEId,UAFJ;AAAA,QAGIkD,aAHJ;AAAA,QAII9F,KAJJ;AAAA,QAKImE,GAAG,GAAGzG,KAAK,CAAC8H,MALhB;AAAA,QAMIxB,KAAK,GAAGtG,KAAK,CAACgG,GANlB;;AASA,QAAIM,KAAK,GAAG,CAAR,GAAYG,GAAhB,EAAqB;AAAE,aAAO,KAAP;AAAe;;AAEtC,QAAI,CAACzG,KAAK,CAACP,GAAN,CAAU+C,SAAX,IAAwB,CAACxC,KAAK,CAACP,GAAN,CAAU+C,SAAV,CAAoBuE,IAAjD,EAAuD;AAAE,aAAO,KAAP;AAAe;;AACxE,QAAI/G,KAAK,CAAC2G,GAAN,CAAUC,UAAV,CAAqBN,KAArB,MAAgC;AAAI;AAAxC,MAAiD;AAAE,eAAO,KAAP;AAAe;;AAClE,QAAItG,KAAK,CAAC2G,GAAN,CAAUC,UAAV,CAAqBN,KAAK,GAAG,CAA7B,MAAoC;AAAI;AAA5C,MAAqD;AAAE,eAAO,KAAP;AAAe;;AAEtE,SAAKN,GAAG,GAAGM,KAAK,GAAG,CAAnB,EAAsBN,GAAG,GAAGS,GAA5B,EAAiCT,GAAG,EAApC,EAAwC;AACtC,UAAIhG,KAAK,CAAC2G,GAAN,CAAUC,UAAV,CAAqBZ,GAArB,MAA8B;AAAK;AAAvC,QAAuD;AAAE,iBAAO,KAAP;AAAe;;AACxE,UAAIhG,KAAK,CAAC2G,GAAN,CAAUC,UAAV,CAAqBZ,GAArB,MAA8B;AAAK;AAAvC,QAAgD;AAC9C;AACD;AACF;;AAED,QAAIA,GAAG,KAAKM,KAAK,GAAG,CAApB,EAAuB;AAAE,aAAO,KAAP;AAAe;;;AACxC,QAAIN,GAAG,IAAIS,GAAX,EAAgB;AAAE,aAAO,KAAP;AAAe;;AACjCT,IAAAA,GAAG;AAEHC,IAAAA,KAAK,GAAGjG,KAAK,CAAC2G,GAAN,CAAUK,KAAV,CAAgBV,KAAK,GAAG,CAAxB,EAA2BN,GAAG,GAAG,CAAjC,CAAR;;AACA,QAAI,CAACC,KAAD,IAAU,CAACA,KAAK,CAACgB,KAAN,CAAY,gBAAZ,CAAf,EAA8C;AAAE,aAAO,KAAP;AAAe;;AAC/DhB,IAAAA,KAAK,GAAGiB,MAAM,CAACC,EAAf;AACA,QAAI9D,IAAI,GAAG6D,MAAM,CAACE,EAAlB;;AAEA,QAAI,OAAOpH,KAAK,CAACP,GAAN,CAAU+C,SAAV,CAAoBuE,IAApB,CAAyB,MAAMd,KAA/B,CAAP,KAAiD,WAArD,EAAkE;AAAE,aAAO,KAAP;AAAe;;AAEnF,QAAI,CAACP,MAAL,EAAa;AACX,UAAI,CAAC1F,KAAK,CAACP,GAAN,CAAU+C,SAAV,CAAoBC,IAAzB,EAA+B;AAAEzC,QAAAA,KAAK,CAACP,GAAN,CAAU+C,SAAV,CAAoBC,IAApB,GAA2B,EAA3B;AAAgC;;AAEjE,UAAIzC,KAAK,CAACP,GAAN,CAAU+C,SAAV,CAAoBuE,IAApB,CAAyB,MAAMd,KAA/B,IAAwC,CAA5C,EAA+C;AAC7Cf,QAAAA,UAAU,GAAGlF,KAAK,CAACP,GAAN,CAAU+C,SAAV,CAAoBC,IAApB,CAAyB5C,MAAtC;AACAG,QAAAA,KAAK,CAACP,GAAN,CAAU+C,SAAV,CAAoBC,IAApB,CAAyByC,UAAzB,IAAuC;AACrCe,UAAAA,KADqC;AAErCoC,UAAAA,KAAK,EAAE;AAF8B,SAAvC;AAIArI,QAAAA,KAAK,CAACP,GAAN,CAAU+C,SAAV,CAAoBuE,IAApB,CAAyB,MAAMd,KAA/B,IAAwCf,UAAxC;AACD,OAPD,MAOO;AACLA,QAAAA,UAAU,GAAGlF,KAAK,CAACP,GAAN,CAAU+C,SAAV,CAAoBuE,IAApB,CAAyB,MAAMd,KAA/B,CAAb;AACD;;AAEDmC,MAAAA,aAAa,GAAGpI,KAAK,CAACP,GAAN,CAAU+C,SAAV,CAAoBC,IAApB,CAAyByC,UAAzB,EAAqCmD,KAArD;AACArI,MAAAA,KAAK,CAACP,GAAN,CAAU+C,SAAV,CAAoBC,IAApB,CAAyByC,UAAzB,EAAqCmD,KAArC;AAEA/F,MAAAA,KAAK,GAAGtC,KAAK,CAACgF,IAAN,CAAW,cAAX,EAA2B,EAA3B,EAA+B,CAA/B,CAAR;AACA1C,MAAAA,KAAK,CAACJ,IAAN,GAAa;AACXC,QAAAA,EAAE,EAAE+C,UADO;AAEX9C,QAAAA,KAAK,EAAEgG,aAFI;AAGXnC,QAAAA,KAHW;AAIX5C,QAAAA;AAJW,OAAb;AAOA4B,MAAAA,0BAA0B,CAACjF,KAAD,EAAQkF,UAAR,CAA1B,CAzBW;AA4BZ;;AAEDlF,IAAAA,KAAK,CAACgG,GAAN,GAAYA,GAAZ;AACAhG,IAAAA,KAAK,CAAC8H,MAAN,GAAerB,GAAf;AACA,WAAO,IAAP;AACD;;;AAGD,WAAStC,YAAT,CAAsBnE,KAAtB,EAA6B0F,MAA7B;AACE,QAAIO,KAAJ;AAAA,QACID,GADJ;AAAA,QAEId,UAFJ;AAAA,QAGIkD,aAHJ;AAAA,QAII9F,KAJJ;AAAA,QAKImE,GAAG,GAAGzG,KAAK,CAAC8H,MALhB;AAAA,QAMIxB,KAAK,GAAGtG,KAAK,CAACgG,GANlB;;AASA,QAAIM,KAAK,GAAG,CAAR,GAAYG,GAAhB,EAAqB;AAAE,aAAO,KAAP;AAAe;;AAEtC,QAAI,CAACzG,KAAK,CAACP,GAAN,CAAU+C,SAAX,IAAwB,CAACxC,KAAK,CAACP,GAAN,CAAU+C,SAAV,CAAoBuE,IAAjD,EAAuD;AAAE,aAAO,KAAP;AAAe;;AACxE,QAAI/G,KAAK,CAAC2G,GAAN,CAAUC,UAAV,CAAqBN,KAArB,MAAgC;AAAI;AAAxC,MAAiD;AAAE,eAAO,KAAP;AAAe;;AAClE,QAAItG,KAAK,CAAC2G,GAAN,CAAUC,UAAV,CAAqBN,KAAK,GAAG,CAA7B,MAAoC;AAAI;AAA5C,MAAqD;AAAE,eAAO,KAAP;AAAe;;AAEtE,SAAKN,GAAG,GAAGM,KAAK,GAAG,CAAnB,EAAsBN,GAAG,GAAGS,GAA5B,EAAiCT,GAAG,EAApC,EAAwC;AACtC,UAAIhG,KAAK,CAAC2G,GAAN,CAAUC,UAAV,CAAqBZ,GAArB,MAA8B,IAAlC,EAAwC;AAAE,eAAO,KAAP;AAAe;;AACzD,UAAIhG,KAAK,CAAC2G,GAAN,CAAUC,UAAV,CAAqBZ,GAArB,MAA8B,IAAlC,EAAwC;AAAE,eAAO,KAAP;AAAe;;AACzD,UAAIhG,KAAK,CAAC2G,GAAN,CAAUC,UAAV,CAAqBZ,GAArB,MAA8B;AAAK;AAAvC,QAAgD;AAC9C;AACD;AACF;;AAED,QAAIA,GAAG,KAAKM,KAAK,GAAG,CAApB,EAAuB;AAAE,aAAO,KAAP;AAAe;;;AACxC,QAAIN,GAAG,IAAIS,GAAX,EAAgB;AAAE,aAAO,KAAP;AAAe;;AACjCT,IAAAA,GAAG;AAEHC,IAAAA,KAAK,GAAGjG,KAAK,CAAC2G,GAAN,CAAUK,KAAV,CAAgBV,KAAK,GAAG,CAAxB,EAA2BN,GAAG,GAAG,CAAjC,CAAR;;AACA,QAAI,OAAOhG,KAAK,CAACP,GAAN,CAAU+C,SAAV,CAAoBuE,IAApB,CAAyB,MAAMd,KAA/B,CAAP,KAAiD,WAArD,EAAkE;AAAE,aAAO,KAAP;AAAe;;AAEnF,QAAI,CAACP,MAAL,EAAa;AACX,UAAI,CAAC1F,KAAK,CAACP,GAAN,CAAU+C,SAAV,CAAoBC,IAAzB,EAA+B;AAAEzC,QAAAA,KAAK,CAACP,GAAN,CAAU+C,SAAV,CAAoBC,IAApB,GAA2B,EAA3B;AAAgC;;AAEjE,UAAIzC,KAAK,CAACP,GAAN,CAAU+C,SAAV,CAAoBuE,IAApB,CAAyB,MAAMd,KAA/B,IAAwC,CAA5C,EAA+C;AAC7Cf,QAAAA,UAAU,GAAGlF,KAAK,CAACP,GAAN,CAAU+C,SAAV,CAAoBC,IAApB,CAAyB5C,MAAtC;AACAG,QAAAA,KAAK,CAACP,GAAN,CAAU+C,SAAV,CAAoBC,IAApB,CAAyByC,UAAzB,IAAuC;AACrCe,UAAAA,KADqC;AAErCoC,UAAAA,KAAK,EAAE;AAF8B,SAAvC;AAIArI,QAAAA,KAAK,CAACP,GAAN,CAAU+C,SAAV,CAAoBuE,IAApB,CAAyB,MAAMd,KAA/B,IAAwCf,UAAxC;AACD,OAPD,MAOO;AACLA,QAAAA,UAAU,GAAGlF,KAAK,CAACP,GAAN,CAAU+C,SAAV,CAAoBuE,IAApB,CAAyB,MAAMd,KAA/B,CAAb;AACD;;AAEDmC,MAAAA,aAAa,GAAGpI,KAAK,CAACP,GAAN,CAAU+C,SAAV,CAAoBC,IAApB,CAAyByC,UAAzB,EAAqCmD,KAArD;AACArI,MAAAA,KAAK,CAACP,GAAN,CAAU+C,SAAV,CAAoBC,IAApB,CAAyByC,UAAzB,EAAqCmD,KAArC;AAEA/F,MAAAA,KAAK,GAAGtC,KAAK,CAACgF,IAAN,CAAW,cAAX,EAA2B,EAA3B,EAA+B,CAA/B,CAAR;AACA1C,MAAAA,KAAK,CAACJ,IAAN,GAAa;AACXC,QAAAA,EAAE,EAAE+C,UADO;AAEX9C,QAAAA,KAAK,EAAEgG,aAFI;AAGXnC,QAAAA;AAHW,OAAb;AAMAhB,MAAAA,0BAA0B,CAACjF,KAAD,EAAQkF,UAAR,CAA1B,CAxBW;AA2BZ;;AAEDlF,IAAAA,KAAK,CAACgG,GAAN,GAAYA,GAAZ;AACAhG,IAAAA,KAAK,CAAC8H,MAAN,GAAerB,GAAf;AACA,WAAO,IAAP;AACD;;;AAGD,WAAS6B,aAAT,CAAuBtI,KAAvB,EAA8BwF,SAA9B,EAAyCC,OAAzC,EAAkDC,MAAlD;AACE,QAAI3D,CAAJ;AAAA,QAAOwG,CAAP;AAAA,QAAUC,CAAV;AAAA,QAAaC,CAAb;AAAA,QAAgBC,aAAhB;AAAA,QAA+BpG,KAA/B;AAAA,QAA8CqG,OAA9C;AAAA,QAAuDC,eAAvD;AAAA,QACIC,YAAY,GAAG,CADnB;AAAA,QAEIC,SAAS,GAAG,KAFhB;AAAA,QAGIC,SAAS,GAAG;AAEhB1B,IAAAA,OAAO,CAACC,KAAR,CAAc,kDAAd;;AACA,QAAI,CAACtH,KAAK,CAACP,GAAN,CAAU+C,SAAf,EAA0B;AACxB;AACAxC,MAAAA,KAAK,CAACV,MAAN,GAAeU,KAAK,CAACV,MAAN,CAAa0J,MAAb,CAAoB,UAAUC,GAAV,EAAe1J,GAAf;AACjC,eAAQ0J,GAAG,CAAC7F,IAAJ,KAAa,4BAArB;AACD,OAFc,CAAf;AAGA;AACD;AAQD;AACA;;AACApD,IAAAA,KAAK,CAACV,MAAN,GAAeU,KAAK,CAACV,MAAN,CAAa0J,MAAb,CAAoB,UAAUC,GAAV,EAAe1J,GAAf;AACjC,cAAQ0J,GAAG,CAAC7F,IAAZ;AACA;AACA;AACA,aAAK,4BAAL;AACE,cAAI,CAAC6F,GAAG,CAAC/G,IAAT,EAAe,OAAO,KAAP;AACf,cAAI,CAAC+G,GAAG,CAAC/G,IAAJ,CAASqD,aAAd,EAA6B,OAAO,KAAP;AAC7B;;AAEF,aAAK,yBAAL;AACEuD,UAAAA,SAAS,GAAG,IAAZ;AACAH,UAAAA,OAAO,GAAG,EAAV;AACAC,UAAAA,eAAe,GAAGK,GAAlB;;AAIA,iBAAO,IAAP;;AAEF,aAAK,0BAAL;AACEH,UAAAA,SAAS,GAAG,KAAZ,CADF;;AAGEC,UAAAA,SAAS,CAAC,MAAMH,eAAe,CAAC1G,IAAhB,CAAqB+D,KAA5B,CAAT,GAA8C;AAC5C3G,YAAAA,MAAM,EAAEqJ,OADoC;AAE5CzG,YAAAA,IAAI,EAAE0G,eAAe,CAAC1G;AAFsB,WAA9C;AAIA2G,UAAAA,YAAY,GAAGtJ,GAAf;AACA,iBAAO,IAAP;AAzBF;;AA2BA,UAAIuJ,SAAJ,EAAe;AACbH,QAAAA,OAAO,CAAC3D,IAAR,CAAaiE,GAAb;AACD;;AACD,aAAO,CAACH,SAAR;AACD,KAhCc,CAAf;AAkCAD,IAAAA,YAAY,GAAGpI,cAAc,CAACyI,aAAf,GAA+BlJ,KAAK,CAACV,MAAN,CAAaO,MAA5C,GAAqDG,KAAK,CAACV,MAAN,CAAaO,MAAjF;AAEA,QAAI4C,IAAI,GAAGzC,KAAK,CAACP,GAAN,CAAU+C,SAAV,CAAoBC,IAA/B;;AACA,QAAI,CAACA,IAAL,EAAW;AAAE;AAAS;;AAEtB,QAAI0G,aAAa,GAAG,EAApB;AAEA7G,IAAAA,KAAK,GAAG,IAAItC,KAAK,CAAC8E,KAAV,CAAgB,qBAAhB,EAAuC,EAAvC,EAA2C,CAA3C,CAAR;AACAxC,IAAAA,KAAK,CAACkB,MAAN,GAAe/C,cAAc,CAACL,QAAf,CAAwBJ,KAAxB,CAAf;AACAmJ,IAAAA,aAAa,CAACnE,IAAd,CAAmB1C,KAAnB;;AAEA,SAAKP,CAAC,GAAG,CAAJ,EAAOwG,CAAC,GAAG9F,IAAI,CAAC5C,MAArB,EAA6BkC,CAAC,GAAGwG,CAAjC,EAAoCxG,CAAC,EAArC,EAAyC;AACvC,UAAIqH,EAAE,GAAG3G,IAAI,CAACV,CAAD,CAAb;AACAO,MAAAA,KAAK,GAAQ,IAAItC,KAAK,CAAC8E,KAAV,CAAgB,eAAhB,EAAiC,EAAjC,EAAqC,CAArC,CAAb;AACAxC,MAAAA,KAAK,CAACJ,IAAN,GAAa;AACXC,QAAAA,EAAE,EAAEJ,CADO;AAEXkE,QAAAA,KAAK,EAAEmD,EAAE,CAACnD;AAFC,OAAb;AAIAkD,MAAAA,aAAa,CAACnE,IAAd,CAAmB1C,KAAnB;;AAEA,UAAI8G,EAAE,CAAC9J,MAAP,EAAe;AACb;AACAgD,QAAAA,KAAK,GAAY,IAAItC,KAAK,CAAC8E,KAAV,CAAgB,gBAAhB,EAAkC,GAAlC,EAAuC,CAAvC,CAAjB;AACAxC,QAAAA,KAAK,CAACoF,KAAN,GAAiB,IAAjB;AACAyB,QAAAA,aAAa,CAACnE,IAAd,CAAmB1C,KAAnB;AAEAA,QAAAA,KAAK,GAAY,IAAItC,KAAK,CAAC8E,KAAV,CAAgB,QAAhB,EAA0B,EAA1B,EAA8B,CAA9B,CAAjB;AACAxC,QAAAA,KAAK,CAAC+G,QAAN,GAAiBD,EAAE,CAAC9J,MAApB;AACAgD,QAAAA,KAAK,CAAC4F,OAAN,GAAiBkB,EAAE,CAAClB,OAApB;AACAiB,QAAAA,aAAa,CAACnE,IAAd,CAAmB1C,KAAnB;AAEAA,QAAAA,KAAK,GAAY,IAAItC,KAAK,CAAC8E,KAAV,CAAgB,iBAAhB,EAAmC,GAAnC,EAAwC,CAAC,CAAzC,CAAjB;AACAxC,QAAAA,KAAK,CAACoF,KAAN,GAAiB,IAAjB;AACAyB,QAAAA,aAAa,CAACnE,IAAd,CAAmB1C,KAAnB;AACD,OAdD,MAcO,IAAI8G,EAAE,CAACnD,KAAP,EAAc;AACnB;AACA,YAAI1D,IAAI,GAAGwG,SAAS,CAAC,MAAMK,EAAE,CAACnD,KAAV,CAAT,IAA6B,EAAxC;AACAkD,QAAAA,aAAa,GAAGA,aAAa,CAACG,MAAd,CAAqB/G,IAAI,CAACjD,MAAL,IAAe,EAApC,CAAhB;;AACA,YAAIiD,IAAI,CAACL,IAAT,EAAe;AACb;AACAkH,UAAAA,EAAE,CAAC1G,aAAH,GAAmBH,IAAI,CAACL,IAAL,CAAUQ,aAA7B;AACA0G,UAAAA,EAAE,CAACnI,IAAH,GAAUsB,IAAI,CAACL,IAAL,CAAUjB,IAApB;AACD;AACF,OATM,MASA;AACL;AACA,cAAMsI,KAAK,CAAC,oCAAD,CAAX;AACD;;AAED,UAAIJ,aAAa,CAACA,aAAa,CAACtJ,MAAd,GAAuB,CAAxB,CAAb,CAAwCuD,IAAxC,KAAiD,iBAArD,EAAwE;AACtEsF,QAAAA,aAAa,GAAGS,aAAa,CAACK,GAAd,EAAhB;AACD,OAFD,MAEO;AACLd,QAAAA,aAAa,GAAG,IAAhB;AACD;;AAEDD,MAAAA,CAAC,GAAGgB,IAAI,CAAChD,GAAL,CAAS2C,EAAE,CAACf,KAAZ,EAAmB,CAAnB,CAAJ;;AACA,WAAKG,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGC,CAAhB,EAAmBD,CAAC,EAApB,EAAwB;AACtBlG,QAAAA,KAAK,GAAG,IAAItC,KAAK,CAAC8E,KAAV,CAAgB,iBAAhB,EAAmC,EAAnC,EAAuC,CAAvC,CAAR;AACAxC,QAAAA,KAAK,CAACJ,IAAN,GAAa;AACXC,UAAAA,EAAE,EAAEJ,CADO;AAEXK,UAAAA,KAAK,EAAEoG,CAFI;AAGXvC,UAAAA,KAAK,EAAEmD,EAAE,CAACnD;AAHC,SAAb;AAKAkD,QAAAA,aAAa,CAACnE,IAAd,CAAmB1C,KAAnB;AACD;;AAED,UAAIoG,aAAJ,EAAmB;AACjBS,QAAAA,aAAa,CAACnE,IAAd,CAAmB0D,aAAnB;AACD;;AAEDpG,MAAAA,KAAK,GAAG,IAAItC,KAAK,CAAC8E,KAAV,CAAgB,gBAAhB,EAAkC,EAAlC,EAAsC,CAAC,CAAvC,CAAR;AACAqE,MAAAA,aAAa,CAACnE,IAAd,CAAmB1C,KAAnB;AACD;;AAEDA,IAAAA,KAAK,GAAG,IAAItC,KAAK,CAAC8E,KAAV,CAAgB,sBAAhB,EAAwC,EAAxC,EAA4C,CAAC,CAA7C,CAAR;AACAqE,IAAAA,aAAa,CAACnE,IAAd,CAAmB1C,KAAnB;AACAtC,IAAAA,KAAK,CAACV,MAAN,CAAaoK,MAAb,CAAoBb,YAApB,EAAkC,CAAlC,EAAqC,GAAGM,aAAxC;AAGA;;AACAnJ,IAAAA,KAAK,CAACP,GAAN,CAAUkK,WAAV,CAAsBrK,MAAtB,GAA+BU,KAAK,CAACV,MAArC;AACD;;;AAGDkB,EAAAA,EAAE,CAACkH,KAAH,CAASkC,KAAT,CAAeC,MAAf,CAAsB,OAAtB,EAA+B,4BAA/B,EAA6DrF,0BAA7D;AAEAhE,EAAAA,EAAE,CAACkH,KAAH,CAASkC,KAAT,CAAeC,MAAf,CAAsB,WAAtB,EAAmC,cAAnC,EAAmDlE,YAAnD,EAAiE;AAAEmE,IAAAA,GAAG,EAAE,CAAE,WAAF,EAAe,WAAf;AAAP,GAAjE;AACAtJ,EAAAA,EAAE,CAACwH,MAAH,CAAU4B,KAAV,CAAgBG,KAAhB,CAAsB,OAAtB,EAA+B,iBAA/B,EAAkDnC,eAAlD;AACApH,EAAAA,EAAE,CAACwH,MAAH,CAAU4B,KAAV,CAAgBG,KAAhB,CAAsB,iBAAtB,EAAyC,wBAAzC,EAAmE5B,sBAAnE;AACA3H,EAAAA,EAAE,CAACwH,MAAH,CAAU4B,KAAV,CAAgBG,KAAhB,CAAsB,wBAAtB,EAAgD,cAAhD,EAAgE5F,YAAhE;AACA3D,EAAAA,EAAE,CAACqB,IAAH,CAAQ+H,KAAR,CAAcG,KAAd,CAAoB,QAApB,EAA8B,eAA9B,EAA+CzB,aAA/C;AACD;;;;"}